import { auth } from '@/auth/auth'
import type { CollectionConfig } from 'payload'

export const Users: CollectionConfig = {
  slug: 'users',
  admin: {
    useAsTitle: 'email',
  },
  auth: {
    disableLocalStrategy: true, // We should disable this since we use Better Auth now
    strategies: [
      {
        name: 'better-auth',
        authenticate: async ({ headers, payload }) => {
          try {
            const userSession = await auth.api.getSession({ headers })

            if (!userSession || !userSession.user) return { user: null }

            const userData = await payload.findByID({
              collection: 'users',
              id: userSession?.user?.id,
            })

            return {
              user: {
                ...userData,
                collection: 'users',
              },
            }
          } catch (err) {
            payload.logger.error(err)
            return { user: null }
          }
        },
      },
    ],
  },
  endpoints: [
    {
      path: '/logout',
      method: 'post',
      handler: async (req) => {
        await auth.api.signOut({
          headers: req.headers,
        })
        return Response.json(
          {
            message: 'Token revoked successfully',
          },
          {
            status: 200,
            headers: req.headers,
          },
        )
      },
    },
  ],
  // access: {
  //   admin: async ({ req }) => {
  //     const controller = await auth.api.userHasPermission({ // Only available when you setup the admin plugin
  //       body: {
  //         permissions: {
  //           adminDashboard: ['read'],
  //         },
  //         userId: req.user?.id,
  //       },
  //     })

  //     const results = await controller({ req })
  //     const isAllowed = typeof results === 'boolean' ? results : false

  //     return isAllowed
  //   },
  // },
  fields: [
    /*  id, createdAt, and updatedAt is autogenerated by Payload */
    /* Add more fields as you need */
    {
      name: 'name',
      type: 'text',
      required: true,
      index: true,
    },
    {
      name: 'email',
      type: 'text',
      required: true,
      unique: true,
      index: true,
    },
    {
      name: 'emailVerified',
      type: 'checkbox',
      required: true,
    },
    {
      name: 'image',
      type: 'text',
    },
  ],
}
